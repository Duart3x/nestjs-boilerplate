services:
  database:
    image: postgres:16
    container_name: nestjs-boilerplate-postgres
    restart: always
    environment:
      POSTGRES_USER: '${DATABASE_USERNAME}'
      POSTGRES_PASSWORD: '${DATABASE_PASSWORD}'
      POSTGRES_DB: '${DATABASE_NAME}'
      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: 'UTC'
    ports:
      - '${DOCKER_DATABASE_PORT}:5432'
    volumes:
      - ./.docker/postgres_data:/var/lib/postgresql/data
    networks:
      - nestjs-boilerplate-network

  redis:
    image: redis:7.0.1-alpine
    container_name: nestjs-boilerplate-redis
    restart: always
    environment:
      REDIS_ARGS: '--requirepass ${REDIS_PASSWORD}'
    ports:
      - '${DOCKER_REDIS_PORT}:6379'
    volumes:
      - ./.docker/redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
    command: 'redis-server --save 120 1 --loglevel warning'
    networks:
      - nestjs-boilerplate-network

  mail:
    image: nestjs-boilerplate-mail
    container_name: nestjs-boilerplate-mail
    build:
      context: .
      dockerfile: maildev.Dockerfile
    ports:
      - ${DOCKER_MAIL_PORT}:1025
      - ${DOCKER_MAIL_CLIENT_PORT}:1080
    networks:
      - nestjs-boilerplate-network
